swagger: '2.0'
info:
  title: 'Bucket Mapper'
  description: 'helping you visualize your bucket list so you can get out there and do it.'
host: localhost:8000
basePath:
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json


paths:
  /users:
    post:
    description: 'adds a user account'
    produces:
       - "application/json"
    responses:
      '200':
        description:  'user created'
        schema:
          type: object
          items:
            $ref: '#/definitions/users'
      default:
        description: unexpected error
        schema:
          $ref: '#/definitions/errorModel'
      security:
      - api_key:
/users/{id}:
    get:
      description: 'loads information of user with Id, return all destination cards'
      produces:
         - "application/json"
      parameters:
        - name: 'status'
          in: 'query'
          description: 'to be considered by filter'
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/users"
        400:
          description: "Invalid ID supplied"
        404:
          description: "user not found"
      security:
      - api_key: []




/destinations:
  get:
    description: 'Gets all of the destinations for specific user'
    produces:
       - "application/json"
    responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/users"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
        401:
          description: "Unathorized entry"
        security:
        - api_key: []
  post:
      summary: "Add a destination"
      description: ""
      operationId: "addDestination"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Destination object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Destinations"
      responses:
        405:
          description: "Invalid input"
      security:
      - bucketMapper_store_auth:
        - "write:destinations"
        - "read:destinations"

  put:
      summary: 'Updates a destination in card with form data'
      description: ""
      produces:
      - "application/json"
      parameters:
        - name: "destinationId"
          in: "path"
          description: "Id of the destination that needs to be updated"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/destinations"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Destination not found"
        401:
          description: "Unathorized entry"
        security:
          - destinationstore_auth:
            - "write:destinations"
            - "read:destinations "
  delete:
      summary: "Deletes a destination"
      description: ""
      operationId: "deleteDestination"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"x
        in: "header"
        required: true
        type: "string"
      - name: "destinationId"
        in: "path"
        description: "Destination id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Destination not found"
      security:
      - bucketMapper_store_auth:
        - "write:destination"
        - "read:destination"
